(undo-tree-save-format-version . 1)
"fcfa2b84d1e9c4aa02d0c3dfac74b5edfc9ed766"
[nil nil nil nil (25541 53276 579884 699000) 0 nil]
([nil nil ((546 . 547) (t 25541 44677 559611 166000)) nil (25541 53276 579881 768000) 0 nil])
([nil nil ((547 . 656)) nil (25541 53276 579879 216000) 0 nil])
([nil nil (("Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." . 224) (undo-tree-id16 . -321) (undo-tree-id17 . -321) 545) nil (25541 53276 579876 905000) 0 nil])
([nil nil (("
" . -224) (undo-tree-id12 . -1) (undo-tree-id13 . -1) ("
" . -225) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 226) nil (25541 53276 579869 868000) 0 nil])
([nil nil (("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." . 100) (undo-tree-id8 . -123) (undo-tree-id9 . -103) (undo-tree-id10 . -123) (undo-tree-id11 . -123) 223) nil (25541 53276 579858 912000) 0 nil])
([nil nil (("
" . -99) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 100) nil (25541 53276 579842 409000) 0 nil])
([nil nil (("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
" . 588) (undo-tree-id28 . -232) (undo-tree-id29 . -232) (undo-tree-id30 . -232) 820 (t 25541 53276 587276 808000)) nil (25541 55012 941033 781000) 0 nil])
([nil nil (("
" . -586) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) ("
" . -587) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 588) nil (25541 55012 941022 557000) 0 nil])
([nil nil ((520 . 521)) nil (25541 55012 940964 145000) 0 nil])
([nil nil ((587 . 589) (t 25541 55012 947285 162000)) nil (25541 55250 675240 837000) 0 nil])
([nil nil ((589 . 1089)) nil (25541 55250 675238 985000) 0 nil])
([nil nil ((1089 . 1090)) nil (25541 55250 675237 37000) 0 nil])
([nil nil (("#" . -520) (undo-tree-id37 . -1) 521) nil (25541 55250 675234 981000) 0 nil])
([nil nil (("b" . -563) (undo-tree-id31 . -1) ("a" . -564) (undo-tree-id32 . -1) ("n" . -565) (undo-tree-id33 . -1) ("n" . -566) (undo-tree-id34 . -1) ("e" . -567) (undo-tree-id35 . -1) ("r" . -568) (undo-tree-id36 . -1) 569) nil (25541 55250 675228 666000) 0 nil])
([nil nil (("  " . -454) ("  " . -433) ("  " . -418) ("  " . -400) ("  " . -374) ("  " . -353) ("  " . -338) ("  " . -320) ("  " . -295) ("  " . -274) ("  " . -259) ("  " . -241) (701 . 702) ("'" . 704) 580) nil (25541 55250 675193 902000) 0 nil])
([nil nil ((539 . 561)) nil (25541 55250 675178 70000) 0 nil])
([nil nil (("g" . -1131) (undo-tree-id63 . -1) 1132 (t 25541 55250 683471 736000)) nil (25541 55401 867252 38000) 0 nil])
([nil nil ((1131 . 1132)) nil (25541 55401 867249 102000) 0 nil])
([nil nil ((" " . -1128) (undo-tree-id61 . -1) ("D" . -1129) (undo-tree-id62 . -1) 1130) nil (25541 55401 867247 203000) 0 nil])
([nil nil ((1128 . 1129)) nil (25541 55401 867243 514000) 0 nil])
([nil nil ((1148 . 1149)) nil (25541 55401 867242 492000) 0 nil])
([nil nil ((1149 . 1747)) nil (25541 55401 867241 439000) 0 nil])
([nil nil ((1747 . 1748)) nil (25541 55401 867240 346000) 0 nil])
([nil nil ((1749 . 1750)) nil (25541 55401 867239 232000) 0 nil])
([nil nil ((" " . -1749) (undo-tree-id60 . -1) 1750) nil (25541 55401 867237 692000) 0 nil])
([nil nil (("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.

- 3+ (dog) years experience managing bone portfolios
- Strong desire to learn tricks and go on walkies
- Aptitude to sit and stay" . 1749) (undo-tree-id58 . -254) (undo-tree-id59 . -254) 2003) nil (25541 55401 867234 998000) 0 nil])
([nil nil (("
" . -1748) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 1749) nil (25541 55401 867230 910000) 0 nil])
([nil nil (("
" . -1747) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 1748) nil (25541 55401 867227 318000) 0 nil])
([nil nil (("{% include link.html type=\"external\" link=\"https://google.com/\" text=\"Apply Now\" icon=\"\" style=\"button\" %}" . 1749) (undo-tree-id52 . -106) (undo-tree-id53 . -106) 1855) nil (25541 55401 867223 499000) 0 nil])
([nil nil (("
" . -1748) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1749) nil (25541 55401 867219 506000) 0 nil])
([nil nil ((1747 . 1749)) nil (25541 55401 867216 188000) 0 nil])
([nil nil ((1749 . 1968)) nil (25541 55401 867215 33000) 0 nil])
([nil nil ((1749 . 1754)) nil (25541 55401 867213 807000) 0 nil])
([nil nil (("{:.center}
" . 1975)) nil (25541 55401 867212 558000) 0 nil])
([nil nil ((1748 . 1759)) nil (25541 55401 867211 262000) 0 nil])
([nil nil ((1985 . 1996)) nil (25541 55401 867210 186000) 0 nil])
([nil nil (("
" . -1996) (undo-tree-id49 . -1) 1997) nil (25541 55401 867208 653000) 0 nil])
([nil nil ((1996 . 1997)) nil (25541 55401 867206 188000) 0 nil])
([nil nil ((1997 . 2001)) nil (25541 55401 867205 113000) 0 nil])
([nil nil (("#" . -1997) (undo-tree-id45 . -1) ("#" . -1998) (undo-tree-id46 . -1) ("#" . -1999) (undo-tree-id47 . -1) ("#" . -2000) (undo-tree-id48 . -1) 2001) nil (25541 55401 867202 522000) 0 nil])
([nil nil ((1997 . 2212)) nil (25541 55401 867194 3000) 0 nil])
([nil nil ((1997 . 2002)) nil (25541 55401 867192 794000) 0 nil])
([nil nil ((2217 . 2218)) nil (25541 55401 867191 568000) 0 nil])
([nil nil (("{:.center}
" . 1748) (undo-tree-id38 . 11) (undo-tree-id39 . -1) (undo-tree-id40 . 10) (undo-tree-id41 . -9) (undo-tree-id42 . 2) (undo-tree-id43 . -10) (undo-tree-id44 . -11)) nil (25541 55401 867188 597000) 0 nil])
([nil nil ((1748 . 1759)) nil (25541 55401 867166 254000) 0 nil])
([nil nil ((2218 . 2229)) nil (25541 55401 867159 8000) 0 nil])
([nil nil ((317 . 318) (t 25541 55401 921045 822000)) nil (25541 55845 511284 216000) 0 nil])
([nil nil (("The Colquitt Lab opened in August of 2022, and we're excited to build a team diverse and stellar researchers.
" . 100)) nil (25541 55845 511275 757000) 0 nil])
([nil nil ((288 . 289) (t 25541 55845 515152 676000)) nil (25541 55885 752721 227000) 0 nil])
([nil nil ((375 . 377)) nil (25541 55885 752719 654000) 0 nil])
([nil nil ((377 . 463)) nil (25541 55885 752718 577000) 0 nil])
([nil nil ((463 . 464)) nil (25541 55885 752717 217000) 0 nil])
([nil nil (("p" . -449) (undo-tree-id73 . -1) ("r" . -450) (undo-tree-id74 . -1) ("o" . -451) (undo-tree-id75 . -1) ("g" . -452) (undo-tree-id76 . -1) ("r" . -453) (undo-tree-id77 . -1) ("a" . -454) (undo-tree-id78 . -1) ("m" . -455) (undo-tree-id79 . -1) ("m" . -456) (undo-tree-id80 . -1) ("e" . -457) (undo-tree-id81 . -1) ("r" . -458) (undo-tree-id82 . -1) 459) nil (25541 55885 752713 120000) 0 nil])
([nil nil ((449 . 452)) nil (25541 55885 752697 822000) 0 nil])
([nil nil (("a" . -449) (undo-tree-id70 . -1) ("d" . -450) (undo-tree-id71 . -1) ("f" . -451) (undo-tree-id72 . -1) 452) nil (25541 55885 752695 467000) 0 nil])
([nil nil ((449 . 453)) nil (25541 55885 752689 923000) 0 nil])
([nil nil (("{%
include list.html
data=\"members\"
component=\"portrait\"
filters=\"role: tech\"
%}" . 377) (undo-tree-id68 . -80) (undo-tree-id69 . -80) 457) nil (25541 55885 752688 115000) 0 nil])
([nil nil ((377 . 457)) nil (25541 55885 752683 795000) 0 nil])
([nil nil ((457 . 459)) nil (25541 55885 752682 528000) 0 nil])
([nil nil ((459 . 539)) nil (25541 55885 752681 71000) 0 nil])
([nil nil (("t" . -531) (undo-tree-id64 . -1) ("e" . -532) (undo-tree-id65 . -1) ("c" . -533) (undo-tree-id66 . -1) ("h" . -534) (undo-tree-id67 . -1) 535) nil (25541 55885 752676 596000) 0 nil])
([nil nil ((531 . 540)) nil (25541 55885 752648 449000) 0 nil])
([nil nil (("{:.center}
" . 2280) (t 25541 55885 774777 482000)) nil (25541 57536 174356 143000) 0 nil])
([nil nil (("{:.center}
" . 2047)) nil (25541 57536 174354 539000) 0 nil])
([nil nil (("{:.center}
" . 1810)) nil (25541 57536 174352 946000) 0 nil])
([nil nil (("## Funding

Our work is made possible by funding from several organizations.
{:.center}

{%
  include gallery.html
  style=\"square\"

  image1=\"images/photo.jpg\"
  link1=\"https://nasa.gov/\"
  tooltip1=\"Cool Foundation\"

  image2=\"images/photo.jpg\"
  link2=\"https://nasa.gov/\"
  tooltip2=\"Cool Institute\"

  image3=\"images/photo.jpg\"
  link3=\"https://nasa.gov/\"
  tooltip3=\"Cool Initiative\"

  image4=\"images/photo.jpg\"
  link4=\"https://nasa.gov/\"
  tooltip4=\"Cool Foundation\"

  image5=\"images/photo.jpg\"
  link5=\"https://nasa.gov/\"
  tooltip5=\"Cool Institute\"

  image6=\"images/photo.jpg\"
  link6=\"https://nasa.gov/\"
  tooltip6=\"Cool Initiative\"
%}
" . 2287) (undo-tree-id119 . -649) (undo-tree-id120 . -390) (undo-tree-id121 . -649) 2936) nil (25541 57536 174350 990000) 0 nil])
([nil nil (("
" . -2285) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) ("
" . -2286) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 2287) nil (25541 57536 174339 817000) 0 nil])
([nil nil (("{% include section.html %}" . 2259) (undo-tree-id83 . -26) (undo-tree-id84 . -11) (undo-tree-id85 . -26) (undo-tree-id86 . -26) (undo-tree-id87 . -26) (undo-tree-id88 . -26) (undo-tree-id89 . -25) (undo-tree-id90 . -26) (undo-tree-id91 . -25) (undo-tree-id92 . -26) (undo-tree-id93 . -25) (undo-tree-id94 . -26) (undo-tree-id95 . -25) (undo-tree-id96 . -26) (undo-tree-id97 . -25) (undo-tree-id98 . -26) (undo-tree-id99 . -25) (undo-tree-id100 . -26) (undo-tree-id101 . -1) (undo-tree-id102 . -26) (undo-tree-id103 . -26) (undo-tree-id104 . -26) (undo-tree-id105 . 26) (undo-tree-id106 . -1) (undo-tree-id107 . 25) (undo-tree-id108 . -25) (undo-tree-id109 . 1) (undo-tree-id110 . -26) (undo-tree-id111 . -26)) nil (25541 57536 174322 50000) 0 nil])
([nil nil ((1895 . 1897) ("[" . -1895) (1895 . 1896) (t 25541 57536 178412 495000)) nil (25542 17950 196340 237000) 0 nil])
([nil nil (("]" . -1896) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 1897) nil (25542 17950 196337 339000) 0 nil])
([nil nil ((")" . 1963) (undo-tree-id501 . -1) (1962 . 1963) (1961 . 1963) ("(" . -1961) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (1960 . 1962)) nil (25542 17950 196327 527000) 0 nil])
([nil nil ((1962 . 1984)) nil (25542 17950 196321 101000) 0 nil])
([nil nil (("t" . -1997) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) ("p" . -1998) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) ("s" . -1999) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (":" . -2000) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) ("/" . -2001) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) ("/" . -2002) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) ("p" . -2003) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) ("b" . -2004) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) ("s" . -2005) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) ("e" . -2006) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) ("." . -2007) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) ("u" . -2008) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) ("c" . -2009) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) ("s" . -2010) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) ("c" . -2011) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) ("." . -2012) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) ("e" . -2013) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) ("d" . -2014) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) ("u" . -2015) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) ("/" . -2016) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (")" . -2017) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . 1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 2018) nil (25542 17950 196293 996000) 0 nil])
([nil nil ((" " . -1993) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) ("(" . -1994) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) ("h" . -1995) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) ("t" . -1996) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) 1997) nil (25542 17950 195930 874000) 0 nil])
([nil nil ((127 . 128) (t 25542 17950 221768 635000)) nil (25546 8966 477360 415000) 0 nil])
([nil nil ((128 . 129)) nil (25546 8966 477358 579000) 0 nil])
([nil nil (("}" . -128) (undo-tree-id540 . -1) 129) nil (25546 8966 477357 100000) 0 nil])
([nil nil (("}" . 130) (129 . 130) (128 . 130) ("{" . -128) (128 . 129)) nil (25546 8966 477352 61000) 0 nil])
([nil nil ((129 . 142)) nil (25546 8966 477349 854000) 0 nil])
([nil nil (("e" . -138) (undo-tree-id536 . -1) ("a" . -139) (undo-tree-id537 . -1) ("f" . -140) (undo-tree-id538 . -1) ("d" . -141) (undo-tree-id539 . -1) 142) nil (25546 8966 477347 404000) 0 nil])
([nil nil ((138 . 139)) nil (25546 8966 477340 746000) 0 nil])
([nil nil ((" " . -137) (undo-tree-id534 . -1) ("e" . -138) (undo-tree-id535 . -1) 139) nil (25546 8966 477338 984000) 0 nil])
([nil nil ((137 . 148)) nil (25546 8966 477335 87000) 0 nil])
([nil nil (("h" . -146) (undo-tree-id532 . -1) ("t" . -147) (undo-tree-id533 . -1) 148) nil (25546 8966 477332 945000) 0 nil])
([nil nil ((146 . 154)) nil (25546 8966 477329 116000) 0 nil])
([nil nil (("a" . -151) (undo-tree-id529 . -1) ("f" . -152) (undo-tree-id530 . -1) ("d" . -153) (undo-tree-id531 . -1) 154) nil (25546 8966 477326 920000) 0 nil])
([nil nil ((151 . 155)) nil (25546 8966 477321 526000) 0 nil])
([nil nil ((" " . -150) (undo-tree-id524 . -1) (" " . -151) (undo-tree-id525 . -1) ("a" . -152) (undo-tree-id526 . -1) ("f" . -153) (undo-tree-id527 . -1) ("d" . -154) (undo-tree-id528 . -1) 155) nil (25546 8966 477318 611000) 0 nil])
([nil nil ((150 . 151)) nil (25546 8966 477310 788000) 0 nil])
([nil nil ((151 . 164)) nil (25546 8966 477309 491000) 0 nil])
([nil nil (("i" . -157) (undo-tree-id517 . -1) ("m" . -158) (undo-tree-id518 . -1) ("a" . -159) (undo-tree-id519 . -1) ("g" . -160) (undo-tree-id520 . -1) ("e" . -161) (undo-tree-id521 . -1) ("s" . -162) (undo-tree-id522 . -1) ("/" . -163) (undo-tree-id523 . -1) 164) nil (25546 8966 477306 251000) 0 nil])
([nil nil ((157 . 167)) nil (25546 8966 477292 932000) 0 nil])
([nil nil (("a" . -164) (undo-tree-id514 . -1) ("f" . -165) (undo-tree-id515 . -1) ("d" . -166) (undo-tree-id516 . -1) 167) nil (25546 8966 477290 487000) 0 nil])
([nil nil ((164 . 167)) nil (25546 8966 477284 693000) 0 nil])
([nil nil (("a" . -164) (undo-tree-id511 . -1) ("d" . -165) (undo-tree-id512 . -1) ("f" . -166) (undo-tree-id513 . -1) 167) nil (25546 8966 477281 843000) 0 nil])
([nil nil ((164 . 182)) nil (25546 8966 477270 661000) 0 nil])
([nil nil ((" " . -181) (undo-tree-id510 . -1) 182) nil (25546 8966 477268 100000) 0 nil])
([nil nil ((181 . 182)) nil (25546 8966 477228 570000) 0 nil])
([nil nil ((182 . 183)) nil (25546 8966 477225 882000) 0 nil])
([nil nil ((184 . 185)) nil (25546 8966 477218 156000) 0 nil])
([nil nil (("{% include figure.html
image=images/lab_2301_1800.png
%}" . 128) (undo-tree-id541 . -56) (undo-tree-id542 . -56) 184 (t 25546 8966 480730 635000)) nil (25546 9041 597075 125000) 0 nil])
([nil nil ((1182 . 1183)) nil (25546 9041 597055 308000) 0 nil])
([nil nil ((1183 . 1239)) nil (25546 9041 597052 380000) 0 nil])
([nil nil ((1239 . 1240)) nil (25546 9041 597043 778000) 0 nil])
([nil nil ((1212 . 1214) ("\"" . -1212) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (1212 . 1213) (t 25546 9041 603487 516000)) nil (25546 9178 315997 585000) 0 nil])
([nil nil (("\"" . -1213) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) 1214) nil (25546 9178 315989 769000) 0 nil])
([nil nil ((1237 . 1238)) nil (25546 9178 315958 425000) 0 nil])
([nil nil (("1" . -1229) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) ("8" . -1230) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) ("0" . -1231) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) ("0" . -1232) (undo-tree-id578 . -1) 1233 (t 25546 9178 325225 56000)) nil (25546 9443 916902 425000) 0 nil])
([nil nil ((1229 . 1232)) nil (25546 9443 916852 980000) 0 nil])
([nil nil (("8" . -1229) (undo-tree-id579 . -1) ("i" . -1230) (undo-tree-id580 . -1) ("n" . -1231) (undo-tree-id581 . -1) 1232 (t 25546 9443 932829 810000)) nil (25546 9595 199617 520000) 0 nil])
([nil nil ((1229 . 1233)) nil (25546 9595 199593 1000) 0 nil])
([nil nil (("'" . -763) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 764 (t 25546 9595 214326 424000)) nil (25579 4294 713713 180000) 0 nil])
([nil current ((766 . 767)) nil (25579 4294 713674 366000) 0 nil])
nil
